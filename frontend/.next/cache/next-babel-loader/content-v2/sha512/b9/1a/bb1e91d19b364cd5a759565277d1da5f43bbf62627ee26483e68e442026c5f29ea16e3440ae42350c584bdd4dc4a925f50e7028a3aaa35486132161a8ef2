{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\next-react-hooks-strapi-food-delivery\\\\frontend\\\\components\\\\ckeditor\\\\Ckeditor.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, component } from 'react'; //import SimpleUploadAdapter from '@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter';\n//import * as customEditor from './ckeditor2';\n//import MyCustomUploadAdapterPlugin from './MyUploadAdapter';\n\nimport ClassicEditor from 'ckeditor-build-with-simple-upload-provider-strapi';\n\nfunction Ckeditor(props) {\n  const editorRef = useRef();\n  const {\n    0: editorLoaded,\n    1: setEditorLoaded\n  } = useState(false); //const { CKEditor, ClassicEditor } = editorRef.current || {}\n\n  const {\n    CKEditor,\n    customEditor\n  } = editorRef.current || {}; //const Editor = customEditor;\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react').CKEditor //ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\n      //customEditor: require('./ckeditor2'),\n\n    };\n    setEditorLoaded(true);\n  }, []);\n  return editorLoaded ? __jsx(CKEditor, {\n    config: {\n      removePlugins: ['ImageCaption'],\n      simpleUpload: {\n        uploadUrl: `${process.env.NEXT_PUBLIC_API_URL}/upload`\n      },\n\n      /*simpleUpload: {\r\n        // The URL that the images are uploaded to.\r\n        uploadUrl: \"http://localhost:1337/uploads/\",\r\n          // Enable the XMLHttpRequest.withCredentials property.\r\n        withCredentials: true,\r\n          // Headers sent along with the XMLHttpRequest to the upload server.\r\n        headers: {\r\n          \"X-CSRF-TOKEN\": \"CSRF-Token\",\r\n          Authorization: \"Bearer <JSON Web Token>\",\r\n        },\r\n      },*/\n      //extraPlugins: [MyCustomUploadAdapterPlugin],\n      //plugins: [ UploadAdapter ],\n\n      /*ckfinder: {\r\n        // eslint-disable-next-line max-len\r\n        uploadUrl: 'http://localhost:1337/uploads/'\r\n      },*/\n      toolbar: {\n        items: ['heading', '|', 'bold', 'italic', '|', 'bulletedList', 'numberedList', '|', 'insertTable', '|', 'imageUpload', '|', 'undo', 'redo']\n      },\n      image: {\n        toolbar: ['imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight', 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative'],\n        styles: ['alignLeft', 'alignCenter', 'alignRight']\n      },\n      table: {\n        contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\n      },\n      language: 'en'\n    } //ngModel={notification.body}\n    ,\n    editor: ClassicEditor,\n    data: props.value,\n    onReady: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n      props.onChange(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Editor loading\");\n}\n\nexport default Ckeditor;","map":{"version":3,"sources":["C:/xampp/htdocs/next-react-hooks-strapi-food-delivery/frontend/components/ckeditor/Ckeditor.js"],"names":["React","useState","useEffect","useRef","component","ClassicEditor","Ckeditor","props","editorRef","editorLoaded","setEditorLoaded","CKEditor","customEditor","current","require","removePlugins","simpleUpload","uploadUrl","process","env","NEXT_PUBLIC_API_URL","toolbar","items","image","styles","table","contentToolbar","language","value","editor","console","log","event","data","getData","onChange"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,OAA9D,C,CACA;AACA;AACA;;AACA,OAAOC,aAAP,MAA0B,mDAA1B;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,SAAS,GAAGL,MAAM,EAAxB;AACA,QAAM;AAAA,OAACM,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,CAAC,KAAD,CAAhD,CAFuB,CAGvB;;AACA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BJ,SAAS,CAACK,OAAV,IAAqB,EAAxD,CAJuB,CAKvB;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAACK,OAAV,GAAoB;AAClBF,MAAAA,QAAQ,EAAEG,OAAO,CAAC,2BAAD,CAAP,CAAqCH,QAD7B,CAElB;AACA;;AAHkB,KAApB;AAKAD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOD,YAAY,GACjB,MAAC,QAAD;AACE,IAAA,MAAM,EAAE;AACNM,MAAAA,aAAa,EAAE,CAAC,cAAD,CADT;AAGNC,MAAAA,YAAY,EAAE;AACZC,QAAAA,SAAS,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,mBAAoB;AADlC,OAHR;;AAMN;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGQ;AACA;;AACA;AACR;AACA;AACA;AACQC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,CACL,SADK,EAEL,GAFK,EAGL,MAHK,EAIL,QAJK,EAKL,GALK,EAML,cANK,EAOL,cAPK,EAQL,GARK,EASL,aATK,EAUL,GAVK,EAWL,aAXK,EAYL,GAZK,EAaL,MAbK,EAcL,MAdK;AADA,OAzBH;AA2CNC,MAAAA,KAAK,EAAE;AACLF,QAAAA,OAAO,EAAE,CACP,sBADO,EACiB,wBADjB,EAC2C,uBAD3C,EAEP,iBAFO,EAGP,iBAHO,EAIP,GAJO,EAKP,sBALO,CADJ;AAQLG,QAAAA,MAAM,EAAE,CACN,WADM,EACO,aADP,EACsB,YADtB;AARH,OA3CD;AAwDNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,CAAC,aAAD,EAAgB,UAAhB,EAA4B,iBAA5B;AADX,OAxDD;AA2DNC,MAAAA,QAAQ,EAAE;AA3DJ,KADV,CA8DE;AA9DF;AA+DE,IAAA,MAAM,EAAEtB,aA/DV;AAgEE,IAAA,IAAI,EAAEE,KAAK,CAACqB,KAhEd;AAiEE,IAAA,OAAO,EAAEC,MAAM,IAAI;AACjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,MAAvC;AACD,KApEH;AAqEE,IAAA,QAAQ,EAAE,CAACG,KAAD,EAAQH,MAAR,KAAmB;AAC3B,YAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAP,EAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,KAAF;AAASH,QAAAA,MAAT;AAAiBI,QAAAA;AAAjB,OAAZ;AACA1B,MAAAA,KAAK,CAAC4B,QAAN,CAAeF,IAAf;AACD,KAzEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GA6Ef;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7EJ;AA+ED;;AACD,eAAe3B,QAAf","sourcesContent":["\r\nimport React, { useState, useEffect, useRef, component } from 'react';\r\n//import SimpleUploadAdapter from '@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter';\r\n//import * as customEditor from './ckeditor2';\r\n//import MyCustomUploadAdapterPlugin from './MyUploadAdapter';\r\nimport ClassicEditor from 'ckeditor-build-with-simple-upload-provider-strapi';\r\n\r\n\r\nfunction Ckeditor(props) {\r\n  const editorRef = useRef()\r\n  const [editorLoaded, setEditorLoaded] = useState(false)\r\n  //const { CKEditor, ClassicEditor } = editorRef.current || {}\r\n  const { CKEditor, customEditor } = editorRef.current || {}\r\n  //const Editor = customEditor;\r\n\r\n  useEffect(() => {\r\n    editorRef.current = {\r\n      CKEditor: require('@ckeditor/ckeditor5-react').CKEditor,\r\n      //ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\r\n      //customEditor: require('./ckeditor2'),\r\n    }\r\n    setEditorLoaded(true)\r\n  }, [])\r\n\r\n  return editorLoaded ? (\r\n    <CKEditor\r\n      config={{\r\n        removePlugins: ['ImageCaption'],\r\n        \r\n        simpleUpload: {\r\n          uploadUrl: `${process.env.NEXT_PUBLIC_API_URL}/upload`,\r\n        },\r\n        /*simpleUpload: {\r\n          // The URL that the images are uploaded to.\r\n          uploadUrl: \"http://localhost:1337/uploads/\",\r\n\r\n          // Enable the XMLHttpRequest.withCredentials property.\r\n          withCredentials: true,\r\n\r\n          // Headers sent along with the XMLHttpRequest to the upload server.\r\n          headers: {\r\n            \"X-CSRF-TOKEN\": \"CSRF-Token\",\r\n            Authorization: \"Bearer <JSON Web Token>\",\r\n          },\r\n        },*/\r\n        //extraPlugins: [MyCustomUploadAdapterPlugin],\r\n        //plugins: [ UploadAdapter ],\r\n        /*ckfinder: {\r\n          // eslint-disable-next-line max-len\r\n          uploadUrl: 'http://localhost:1337/uploads/'\r\n        },*/\r\n        toolbar: {\r\n          items: [\r\n            'heading',\r\n            '|',\r\n            'bold',\r\n            'italic',\r\n            '|',\r\n            'bulletedList',\r\n            'numberedList',\r\n            '|',\r\n            'insertTable',\r\n            '|',\r\n            'imageUpload',\r\n            '|',\r\n            'undo',\r\n            'redo'\r\n          ]\r\n        },\r\n        image: {\r\n          toolbar: [\r\n            'imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight',\r\n            'imageStyle:full',\r\n            'imageStyle:side',\r\n            '|',\r\n            'imageTextAlternative',\r\n          ],\r\n          styles: [\r\n            'alignLeft', 'alignCenter', 'alignRight'\r\n          ],\r\n\r\n        },\r\n        table: {\r\n          contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\r\n        },\r\n        language: 'en'\r\n      }}\r\n      //ngModel={notification.body}\r\n      editor={ClassicEditor}\r\n      data={props.value}\r\n      onReady={editor => {\r\n        // You can store the \"editor\" and use when it is needed.\r\n        console.log('Editor is ready to use!', editor)\r\n      }}\r\n      onChange={(event, editor) => {\r\n        const data = editor.getData()\r\n        console.log({ event, editor, data })\r\n        props.onChange(data)\r\n      }}\r\n    />\r\n  ) : (\r\n      <div>Editor loading</div>\r\n    )\r\n}\r\nexport default Ckeditor;"]},"metadata":{},"sourceType":"module"}