{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\next-react-hooks-strapi-food-delivery\\\\frontend\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* _app.js */\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Cookie from \"js-cookie\";\nimport fetch from \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport AppContext from \"../context/AppContext\";\nimport withData from \"../lib/apollo\";\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: null,\n      cart: {\n        items: [],\n        total: 0\n      }\n    });\n\n    _defineProperty(this, \"setUser\", user => {\n      this.setState({\n        user\n      });\n    });\n\n    _defineProperty(this, \"addItem\", item => {\n      let {\n        items\n      } = this.state.cart; //check for item already in cart\n      //if not in cart, add item if item is found increase quanity ++\n\n      const newItem = items.find(i => i.id === item.id); // if item is not new, add to cart, set quantity to 1\n\n      if (!newItem) {\n        //set quantity property to 1\n        item.quantity = 1;\n        console.log(this.state.cart.total, item.price);\n        this.setState({\n          cart: {\n            items: [...items, item],\n            total: this.state.cart.total + item.price\n          }\n        }, () => Cookie.set(\"cart\", this.state.cart.items));\n      } else {\n        this.setState({\n          cart: {\n            items: this.state.cart.items.map(item => item.id === newItem.id ? Object.assign({}, item, {\n              quantity: item.quantity + 1\n            }) : item),\n            total: this.state.cart.total + item.price\n          }\n        }, () => Cookie.set(\"cart\", this.state.cart.items));\n      }\n    });\n\n    _defineProperty(this, \"removeItem\", item => {\n      let {\n        items\n      } = this.state.cart; //check for item already in cart\n      //if not in cart, add item if item is found increase quanity ++\n\n      const newItem = items.find(i => i.id === item.id);\n\n      if (newItem.quantity > 1) {\n        this.setState({\n          cart: {\n            items: this.state.cart.items.map(item => item.id === newItem.id ? Object.assign({}, item, {\n              quantity: item.quantity - 1\n            }) : item),\n            total: this.state.cart.total - item.price\n          }\n        }, () => Cookie.set(\"cart\", this.state.items));\n      } else {\n        const items = [...this.state.cart.items];\n        const index = items.findIndex(i => i.id === newItem.id);\n        items.splice(index, 1);\n        this.setState({\n          cart: {\n            items: items,\n            total: this.state.cart.total - item.price\n          }\n        }, () => Cookie.set(\"cart\", this.state.items));\n      }\n    });\n  }\n\n  componentDidMount() {\n    const token = Cookie.get(\"token\"); // restore cart from cookie, this could also be tracked in a db\n\n    const cart = Cookie.get(\"cart\"); //if items in cart, set items and total from cookie\n\n    console.log(cart);\n\n    if (typeof cart === \"string\" && cart !== \"undefined\") {\n      console.log(\"foyd\");\n      JSON.parse(cart).forEach(item => {\n        this.setState({\n          cart: {\n            items: JSON.parse(cart),\n            total: item.price * item.quantity\n          }\n        });\n      });\n    }\n\n    if (token) {\n      // authenticate the token on the server and place set user object\n      fetch(\"http://localhost:1337/users/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(async res => {\n        // if res comes back not valid, token is not valid\n        // delete the token and log the user out on client\n        if (!res.ok) {\n          Cookie.remove(\"token\");\n          this.setState({\n            user: null\n          });\n          return null;\n        }\n\n        const user = await res.json();\n        this.setUser(user);\n      });\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(AppContext.Provider, {\n      value: {\n        user: this.state.user,\n        isAuthenticated: !!this.state.user,\n        setUser: this.setUser,\n        cart: this.state.cart,\n        addItem: this.addItem,\n        removeItem: this.removeItem\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n      integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    })), __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withData(MyApp);","map":{"version":3,"sources":["C:/xampp/htdocs/next-react-hooks-strapi-food-delivery/frontend/pages/_app.js"],"names":["React","App","Head","Cookie","fetch","Layout","AppContext","withData","MyApp","user","cart","items","total","setState","item","state","newItem","find","i","id","quantity","console","log","price","set","map","Object","assign","index","findIndex","splice","componentDidMount","token","get","JSON","parse","forEach","headers","Authorization","then","res","ok","remove","json","setUser","render","Component","pageProps","props","isAuthenticated","addItem","removeItem"],"mappings":"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","sourcesContent":["/* _app.js */\r\nimport React from \"react\";\r\nimport App from \"next/app\";\r\nimport Head from \"next/head\";\r\nimport Cookie from \"js-cookie\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Layout from \"../components/Layout\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport withData from \"../lib/apollo\";\r\n\r\nclass MyApp extends App {\r\n  state = {\r\n    user: null,\r\n    cart: { items: [], total: 0 },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = Cookie.get(\"token\");\r\n    // restore cart from cookie, this could also be tracked in a db\r\n    const cart = Cookie.get(\"cart\");\r\n    //if items in cart, set items and total from cookie\r\n    console.log(cart);\r\n\r\n    if (typeof cart === \"string\" && cart !== \"undefined\") {\r\n      console.log(\"foyd\");\r\n      JSON.parse(cart).forEach((item) => {\r\n        this.setState({\r\n          cart: { items: JSON.parse(cart), total: item.price * item.quantity },\r\n        });\r\n      });\r\n    }\r\n    if (token) {\r\n      // authenticate the token on the server and place set user object\r\n      fetch(\"http://localhost:1337/users/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then(async (res) => {\r\n        // if res comes back not valid, token is not valid\r\n        // delete the token and log the user out on client\r\n        if (!res.ok) {\r\n          Cookie.remove(\"token\");\r\n          this.setState({ user: null });\r\n          return null;\r\n        }\r\n        const user = await res.json();\r\n        this.setUser(user);\r\n      });\r\n    }\r\n  }\r\n\r\n  setUser = (user) => {\r\n    this.setState({ user });\r\n  };\r\n\r\n  addItem = (item) => {\r\n    let { items } = this.state.cart;\r\n    //check for item already in cart\r\n    //if not in cart, add item if item is found increase quanity ++\r\n    const newItem = items.find((i) => i.id === item.id);\r\n    // if item is not new, add to cart, set quantity to 1\r\n    if (!newItem) {\r\n      //set quantity property to 1\r\n      item.quantity = 1;\r\n      console.log(this.state.cart.total, item.price);\r\n      this.setState(\r\n        {\r\n          cart: {\r\n            items: [...items, item],\r\n            total: this.state.cart.total + item.price,\r\n          },\r\n        },\r\n        () => Cookie.set(\"cart\", this.state.cart.items)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          cart: {\r\n            items: this.state.cart.items.map((item) =>\r\n              item.id === newItem.id\r\n                ? Object.assign({}, item, { quantity: item.quantity + 1 })\r\n                : item\r\n            ),\r\n            total: this.state.cart.total + item.price,\r\n          },\r\n        },\r\n        () => Cookie.set(\"cart\", this.state.cart.items)\r\n      );\r\n    }\r\n  };\r\n  removeItem = (item) => {\r\n    let { items } = this.state.cart;\r\n    //check for item already in cart\r\n    //if not in cart, add item if item is found increase quanity ++\r\n    const newItem = items.find((i) => i.id === item.id);\r\n    if (newItem.quantity > 1) {\r\n      this.setState(\r\n        {\r\n          cart: {\r\n            items: this.state.cart.items.map((item) =>\r\n              item.id === newItem.id\r\n                ? Object.assign({}, item, { quantity: item.quantity - 1 })\r\n                : item\r\n            ),\r\n            total: this.state.cart.total - item.price,\r\n          },\r\n        },\r\n        () => Cookie.set(\"cart\", this.state.items)\r\n      );\r\n    } else {\r\n      const items = [...this.state.cart.items];\r\n      const index = items.findIndex((i) => i.id === newItem.id);\r\n\r\n      items.splice(index, 1);\r\n      this.setState(\r\n        { cart: { items: items, total: this.state.cart.total - item.price } },\r\n        () => Cookie.set(\"cart\", this.state.items)\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n\r\n    return (\r\n      <AppContext.Provider\r\n        value={{\r\n          user: this.state.user,\r\n          isAuthenticated: !!this.state.user,\r\n          setUser: this.setUser,\r\n          cart: this.state.cart,\r\n          addItem: this.addItem,\r\n          removeItem: this.removeItem,\r\n        }}\r\n      >\r\n        <Head>\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n            integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n            crossOrigin=\"anonymous\"\r\n          />\r\n        </Head>\r\n\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withData(MyApp);"]},"metadata":{},"sourceType":"module"}