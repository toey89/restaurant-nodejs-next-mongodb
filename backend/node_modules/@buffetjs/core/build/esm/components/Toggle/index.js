/**
 *
 * Toggle
 *
 */
import React from 'react';
import PropTypes from 'prop-types';
import { Toggle as StyledToggle, ToggleWrapper } from '@buffetjs/styles';
import Label from '../Label';

function Toggle(_ref) {
  var disabled = _ref.disabled,
      id = _ref.id,
      className = _ref.className,
      name = _ref.name,
      _onChange = _ref.onChange,
      value = _ref.value;
  return /*#__PURE__*/React.createElement(ToggleWrapper, {
    className: className
  }, /*#__PURE__*/React.createElement(Label, {
    htmlFor: id || name
  }, /*#__PURE__*/React.createElement(StyledToggle, {
    disabled: disabled,
    checked: value,
    id: id || name,
    name: id || name,
    onChange: function onChange(e) {
      _onChange({
        target: {
          name: name,
          value: e.target.checked
        }
      });
    }
  }), /*#__PURE__*/React.createElement("span", null, "OFF"), /*#__PURE__*/React.createElement("span", null, "ON")));
}

Toggle.defaultProps = {
  className: null,
  disabled: false,
  id: null,
  onChange: function onChange() {},
  value: false
};
Toggle.propTypes = {
  className: PropTypes.string,
  disabled: PropTypes.bool,
  id: PropTypes.string,
  name: PropTypes.string.isRequired,
  onChange: PropTypes.func,
  value: PropTypes.bool
};
export default Toggle;