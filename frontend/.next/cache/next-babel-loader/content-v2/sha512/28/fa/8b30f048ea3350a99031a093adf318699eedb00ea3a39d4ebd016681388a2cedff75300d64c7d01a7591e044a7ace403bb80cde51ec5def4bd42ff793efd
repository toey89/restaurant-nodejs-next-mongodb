{"ast":null,"code":"import _toConsumableArray from \"C:/xampp/htdocs/next-react-hooks-strapi-food-delivery/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/xampp/htdocs/next-react-hooks-strapi-food-delivery/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/xampp/htdocs/next-react-hooks-strapi-food-delivery/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/xampp/htdocs/next-react-hooks-strapi-food-delivery/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query restaurants($start: Int, $limit: Int, $name : String!) {\\n      \\n      restaurants(start: $start, limit: $limit, where: { name_contains: $name }) {\\n          id\\n          name\\n          description\\n          image {\\n            url\\n          }\\n      }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* components/RestaurantList/index.js */\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Link from \"next/link\";\nimport { Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nimport React, { useState, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport Router, { withRouter, useRouter } from 'next/router';\nimport queryString from 'query-string';\nimport axios from 'axios';\nvar QUERY = gql(_templateObject());\n\nfunction RestaurantList(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Wholeres = _React$useState2[0],\n      setWholeres = _React$useState2[1];\n\n  var router = useRouter();\n  var page = router.query.page;\n  var starte = 0;\n\n  if ({\n    page: page\n  } == 2) {\n    var _starte = 5;\n  } else {\n    var _starte2 = 0;\n  }\n\n  var _useQuery = useQuery(QUERY, {\n    variables: {\n      //date: date,\n      //offset: 0,\n      start: 0,\n      limit: 10,\n      name: props.search //limit: 10,\n      //start: starte,\n      //resellIndex: resellFilter,\n      //brandCategorieName: brandFilter\n\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) return \"Error loading restaurants\"; //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n\n  if (loading) return __jsx(\"h1\", null, \"Fetching\"); //setWholeres(data.restaurants.length);\n\n  axios.get(\"http://localhost:1337/restaurants/count/?name_contains=\".concat(props.search)).then(function (response) {\n    var restau = response.data;\n    setWholeres(restau); //alert(restau);\n\n    console.log(restau);\n  }, function (error) {\n    console.log(error);\n  });\n  var pageCount = Wholeres / 10;\n\n  if (pageCount < 1) {\n    pageCount = 1;\n  } //alert(pageCount);\n  //const pageCount = 5;\n  //alert(allp.data.code);\n\n\n  if (data.restaurants && data.restaurants.length) {\n    //searchQuery\n    var searchQuery = data.restaurants.filter(function (query) {\n      return query.name.toLowerCase().includes(props.search);\n    }); //setWholeres(data.restaurants.length);\n    //const pageCount = Wholeres / 10;\n\n    if (searchQuery.length != 0) {\n      var pagginationHandler = function pagginationHandler(page) {\n        var currentPath = router.pathname;\n\n        var currentQuery = _objectSpread({}, router.query);\n\n        currentQuery.page = page.selected + 1; //alert(page.selected);\n        //console.log(page.selected);\n\n        router.push({\n          pathname: currentPath //query: currentQuery,\n\n        });\n        fetchMore({\n          variables: {\n            //start: data.restaurants.length * currentQuery.page - 10,\n            start: 10 * (page.selected + 1) - 10,\n            limit: 10,\n            name: props.search\n          },\n          updateQuery: function updateQuery(prev, _ref) {\n            var fetchMoreResult = _ref.fetchMoreResult;\n            //setWholeres(searchQuery.length);\n            if (!fetchMoreResult) return prev;\n            return Object.assign({}, prev, {\n              //restaurants: [...prev.restaurants, ...fetchMoreResult.restaurants]\n              restaurants: _toConsumableArray(fetchMoreResult.restaurants)\n            });\n          }\n        });\n      }; //const pageCount = searchQuery.length / 10;\n      //setWholeres(searchQuery.length);\n      //const pageCount = Wholeres / 10;\n      //const pageCount = 5;\n      //const pageCount = data.restaurants.length / 10;\n\n      /*const pagginationHandler = (page) => {\r\n        const currentPath = router.pathname;\r\n        const currentQuery = { ...router.query };\r\n        currentQuery.page = page.selected + 1;\r\n        //alert(currentQuery.page);\r\n        router.push({\r\n            pathname: currentPath,\r\n            query: currentQuery,\r\n        });\r\n        \r\n        //use state to keep  the searchQuery.length val()///////\r\n        \r\n        fetchMore({\r\n          variables: {\r\n            //start: data.restaurants.length * currentQuery.page - 10,\r\n            start: 10 * currentQuery.page - 10,\r\n            limit: 10,\r\n            name: props.search,\r\n          },\r\n          updateQuery: (prev, { fetchMoreResult }) => {\r\n            setWholeres(searchQuery.length);\r\n            if (!fetchMoreResult) return prev;\r\n            return Object.assign({}, prev, {\r\n              //restaurants: [...prev.restaurants, ...fetchMoreResult.restaurants]\r\n              restaurants: [...fetchMoreResult.restaurants]\r\n            });\r\n          }\r\n        })\r\n        \r\n      };*/\n      //const {page} = router.query;\n      //const content = {page};\n\n      /*const page = 1;\r\n      const currentQuery = { ...router.query };\r\n      currentQuery.page = page.selected + 1;\r\n      const content = currentQuery.page;*/\n      //alert(pageCount);\n\n\n      return __jsx(Row, null, __jsx(\"div\", {\n        style: {\n          marginRight: 40,\n          marginTop: 0\n        },\n        className: \"jsx-2274621739\"\n      }, __jsx(\"h2\", {\n        className: \"jsx-2274621739\"\n      }, \"\\u0E23\\u0E49\\u0E32\\u0E19\\u0E2D\\u0E32\\u0E2B\\u0E32\\u0E23\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14 (All of Restaurants)\")), __jsx(\"p\", {\n        className: \"jsx-2274621739\"\n      }, __jsx(Link, {\n        as: \"/addrestaurant/\",\n        href: \"/addrestaurants/\"\n      }, __jsx(\"a\", {\n        className: \"jsx-2274621739\" + \" \" + \"btn btn-primary\"\n      }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E23\\u0E49\\u0E32\\u0E19\\u0E2D\\u0E32\\u0E2B\\u0E32\\u0E23\"))), __jsx(\"div\", {\n        style: {\n          marginBottom: 20\n        },\n        className: \"jsx-2274621739\" + \" \" + \"container\"\n      }, __jsx(ReactPaginate, {\n        previousLabel: 'previous',\n        nextLabel: 'next',\n        breakLabel: '...',\n        breakClassName: 'break-me',\n        activeClassName: 'active',\n        containerClassName: 'pagination',\n        subContainerClassName: 'pages pagination',\n        initialPage: 1 - 1,\n        pageCount: pageCount //page count\n        ,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: pagginationHandler,\n        disableInitialCallback: true,\n        activeLinkClassName: 'active'\n      })), searchQuery.map(function (res) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          key: res.id\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 0.5rem 20px 0.5rem\"\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 250\n          },\n          src: true ? res.image[0].url != null ? res.image[0].url : \"https://strapiuploadtoey.s3.amazonaws.com/Tom_Yum_Kung_746ad0580a.jpg\" : res.image[0] != null ? \"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(res.image[0].url) : \"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/uploads/istockphoto-922962354-612x612.jpg\")\n        }), __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n          className: \"jsx-2274621739\" + \" \" + \"card-footer\"\n        }, __jsx(Link, {\n          as: \"/restaurants/\".concat(res.id),\n          href: \"/restaurants?id=\".concat(res.id)\n        }, __jsx(\"a\", {\n          className: \"jsx-2274621739\" + \" \" + \"btn btn-primary\"\n        }, \"View\")))));\n      }), __jsx(_JSXStyle, {\n        id: \"2274621739\"\n      }, [\".card-columns{-webkit-column-count:3;column-count:3;}\", \".posts{min-height:400px;}\", \".pagination{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;list-style:none;height:40px;border:1px solid black;border-radius:5px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0;margin-top:40px;}\", \"a{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;padding:0 10px;cursor:pointer;color:black;}\", \"a:hover{-webkit-text-decoration:underline;text-decoration:underline;}\", \".active a{font-weight:bold;-webkit-text-decoration:underline;text-decoration:underline;pointer-events:none;}\"]));\n    } else {\n      return __jsx(\"h1\", null, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h5\", null, \"Add Restaurants\");\n}\n\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}